/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ScheduleCompletedRouteImport } from './routes/schedule-completed'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ScheduleScheduleIdRouteImport } from './routes/schedule.$scheduleId'
import { Route as DemoTanstackQueryRouteImport } from './routes/demo.tanstack-query'
import { Route as ClockOutScheduleIdRouteImport } from './routes/clock-out.$scheduleId'
import { Route as DemoFormSimpleRouteImport } from './routes/demo.form.simple'
import { Route as DemoFormAddressRouteImport } from './routes/demo.form.address'

const ScheduleCompletedRoute = ScheduleCompletedRouteImport.update({
  id: '/schedule-completed',
  path: '/schedule-completed',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ScheduleScheduleIdRoute = ScheduleScheduleIdRouteImport.update({
  id: '/schedule/$scheduleId',
  path: '/schedule/$scheduleId',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoTanstackQueryRoute = DemoTanstackQueryRouteImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRouteImport,
} as any)
const ClockOutScheduleIdRoute = ClockOutScheduleIdRouteImport.update({
  id: '/clock-out/$scheduleId',
  path: '/clock-out/$scheduleId',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormSimpleRoute = DemoFormSimpleRouteImport.update({
  id: '/demo/form/simple',
  path: '/demo/form/simple',
  getParentRoute: () => rootRouteImport,
} as any)
const DemoFormAddressRoute = DemoFormAddressRouteImport.update({
  id: '/demo/form/address',
  path: '/demo/form/address',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/schedule-completed': typeof ScheduleCompletedRoute
  '/clock-out/$scheduleId': typeof ClockOutScheduleIdRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/schedule/$scheduleId': typeof ScheduleScheduleIdRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/schedule-completed': typeof ScheduleCompletedRoute
  '/clock-out/$scheduleId': typeof ClockOutScheduleIdRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/schedule/$scheduleId': typeof ScheduleScheduleIdRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/profile': typeof ProfileRoute
  '/schedule-completed': typeof ScheduleCompletedRoute
  '/clock-out/$scheduleId': typeof ClockOutScheduleIdRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
  '/schedule/$scheduleId': typeof ScheduleScheduleIdRoute
  '/demo/form/address': typeof DemoFormAddressRoute
  '/demo/form/simple': typeof DemoFormSimpleRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/profile'
    | '/schedule-completed'
    | '/clock-out/$scheduleId'
    | '/demo/tanstack-query'
    | '/schedule/$scheduleId'
    | '/demo/form/address'
    | '/demo/form/simple'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/profile'
    | '/schedule-completed'
    | '/clock-out/$scheduleId'
    | '/demo/tanstack-query'
    | '/schedule/$scheduleId'
    | '/demo/form/address'
    | '/demo/form/simple'
  id:
    | '__root__'
    | '/'
    | '/profile'
    | '/schedule-completed'
    | '/clock-out/$scheduleId'
    | '/demo/tanstack-query'
    | '/schedule/$scheduleId'
    | '/demo/form/address'
    | '/demo/form/simple'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ProfileRoute: typeof ProfileRoute
  ScheduleCompletedRoute: typeof ScheduleCompletedRoute
  ClockOutScheduleIdRoute: typeof ClockOutScheduleIdRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
  ScheduleScheduleIdRoute: typeof ScheduleScheduleIdRoute
  DemoFormAddressRoute: typeof DemoFormAddressRoute
  DemoFormSimpleRoute: typeof DemoFormSimpleRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/schedule-completed': {
      id: '/schedule-completed'
      path: '/schedule-completed'
      fullPath: '/schedule-completed'
      preLoaderRoute: typeof ScheduleCompletedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/schedule/$scheduleId': {
      id: '/schedule/$scheduleId'
      path: '/schedule/$scheduleId'
      fullPath: '/schedule/$scheduleId'
      preLoaderRoute: typeof ScheduleScheduleIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/clock-out/$scheduleId': {
      id: '/clock-out/$scheduleId'
      path: '/clock-out/$scheduleId'
      fullPath: '/clock-out/$scheduleId'
      preLoaderRoute: typeof ClockOutScheduleIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/simple': {
      id: '/demo/form/simple'
      path: '/demo/form/simple'
      fullPath: '/demo/form/simple'
      preLoaderRoute: typeof DemoFormSimpleRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/demo/form/address': {
      id: '/demo/form/address'
      path: '/demo/form/address'
      fullPath: '/demo/form/address'
      preLoaderRoute: typeof DemoFormAddressRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ProfileRoute: ProfileRoute,
  ScheduleCompletedRoute: ScheduleCompletedRoute,
  ClockOutScheduleIdRoute: ClockOutScheduleIdRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
  ScheduleScheduleIdRoute: ScheduleScheduleIdRoute,
  DemoFormAddressRoute: DemoFormAddressRoute,
  DemoFormSimpleRoute: DemoFormSimpleRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
